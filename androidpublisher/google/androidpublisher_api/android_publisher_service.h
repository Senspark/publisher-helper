// Copyright 2010 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.
//
//------------------------------------------------------------------------------
// This code was generated by google-apis-code-generator 1.5.1
//   Build date: 2017-02-15 17:18:02 UTC
//   on: 2017-08-09, 13:29:24 UTC
//   C++ generator version: 0.1.4
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//------------------------------------------------------------------------------
#ifndef  GOOGLE_ANDROIDPUBLISHER_API_ANDROID_PUBLISHER_SERVICE_H_
#define  GOOGLE_ANDROIDPUBLISHER_API_ANDROID_PUBLISHER_SERVICE_H_

#include <string>
#include "googleapis/base/integral_types.h"
#include "googleapis/base/macros.h"
#include "googleapis/client/service/client_service.h"
#include "googleapis/client/service/media_uploader.h"
#include "googleapis/client/util/status.h"
#include "googleapis/client/util/uri_template.h"

#include "google/androidpublisher_api/apk.h"
#include "google/androidpublisher_api/apk_listing.h"
#include "google/androidpublisher_api/apk_listings_list_response.h"
#include "google/androidpublisher_api/apks_add_externally_hosted_request.h"
#include "google/androidpublisher_api/apks_add_externally_hosted_response.h"
#include "google/androidpublisher_api/apks_list_response.h"
#include "google/androidpublisher_api/app_details.h"
#include "google/androidpublisher_api/app_edit.h"
#include "google/androidpublisher_api/deobfuscation_files_upload_response.h"
#include "google/androidpublisher_api/entitlements_list_response.h"
#include "google/androidpublisher_api/expansion_file.h"
#include "google/androidpublisher_api/expansion_files_upload_response.h"
#include "google/androidpublisher_api/images_delete_all_response.h"
#include "google/androidpublisher_api/images_list_response.h"
#include "google/androidpublisher_api/images_upload_response.h"
#include "google/androidpublisher_api/in_app_product.h"
#include "google/androidpublisher_api/inappproducts_batch_request.h"
#include "google/androidpublisher_api/inappproducts_batch_response.h"
#include "google/androidpublisher_api/inappproducts_list_response.h"
#include "google/androidpublisher_api/listing.h"
#include "google/androidpublisher_api/listings_list_response.h"
#include "google/androidpublisher_api/product_purchase.h"
#include "google/androidpublisher_api/review.h"
#include "google/androidpublisher_api/reviews_list_response.h"
#include "google/androidpublisher_api/reviews_reply_request.h"
#include "google/androidpublisher_api/reviews_reply_response.h"
#include "google/androidpublisher_api/subscription_purchase.h"
#include "google/androidpublisher_api/subscription_purchases_defer_request.h"
#include "google/androidpublisher_api/subscription_purchases_defer_response.h"
#include "google/androidpublisher_api/testers.h"
#include "google/androidpublisher_api/track.h"
#include "google/androidpublisher_api/tracks_list_response.h"
#include "google/androidpublisher_api/voided_purchases_list_response.h"


namespace google_androidpublisher_api {
using namespace googleapis;
/**
 * \mainpage
 *   Google Play Developer API Version v2
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/android-publisher'>Google Play Developer API</a>
 *      <tr><th>API Version<td>v2
 *      <tr><th>API Rev<td>45
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/android-publisher'>
 *              https://developers.google.com/android-publisher</a>
 *      <tr><th>Discovery Name<td>androidpublisher
 *      <tr><th>Generated At<td>2017-08-09 13:29:24 UTC
 *      <tr><th>C++ Generator<td>google-apis-code-generator
 *      <tr><th>Generator Version
 *          <td>1.5.1 / c++=0.1.4
 *      <tr><th>Generator Build<td>2017-02-15 17:18:02 UTC
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google Play Developer API can be found at
 * <a href='https://developers.google.com/android-publisher'>https://developers.google.com/android-publisher</a>.
 *
 * For more information about the Google APIs Client Library for C++, see
 * <a href='https://developers.google.com/api-client-library/cpp/start/get_started'>
 * https://developers.google.com/api-client-library/cpp/start/get_started</a>
 */
class AndroidPublisherService;

/**
 * Implements a common base method for all methods within the AndroidPublisherService.
 *
 * This class defines all the attributes common across all methods.
 * It does not pertain to any specific service API so is not normally
 * explicitly instantiated.
 */
class AndroidPublisherServiceBaseRequest
      : public client::ClientServiceRequest {
 public:
  /**
   * Standard constructor.
   *
   * @param[in] service  The service instance to send to when executed.
   *        In practice this will be supplied internally by the service
   *        when it acts as a method factory.
   *
   * @param[in] credential  If not NULL then the credential to authorize with.
   *        In practice this is supplied by the user code that is creating
   *        the method instance.
   *
   * @param[in] method  The HTTP method to use for the underlying HTTP request.
   *        In practice this is specified by the particular API endpoint and
   *        supplied internally by the derived class for that endpoint.
   *
   * @param[in] uri_template  The <a href='http://tools.ietf.org/html/rfc6570'>
   *        RFC 6570 URI Template</a> specifying the url to invoke
   *        The parameters in the template should be resolvable attributes.
   *        In practice this parameter is supplied internally by the derived
   *        class for the endpoint.
   */
  AndroidPublisherServiceBaseRequest(
      const client::ClientService* service,
      client::AuthorizationCredential* credential,
      client::HttpRequest::HttpMethod method,
      const StringPiece& uri_template);

  /**
   * Standard destructor.
   */
  virtual ~AndroidPublisherServiceBaseRequest();


  /**
   * Clears the '<code>alt</code>' attribute so it is no longer set.
   */
  void clear_alt() {
    _have_alt_ = false;
    client::ClearCppValueHelper(&alt_);
  }


  /**
   * Gets the optional '<code>alt</code>' attribute.
   *
   * If the value is not set then the default value will be returned.
   */
  const string& get_alt() const { return alt_; }

  /**
   * Gets a modifiable pointer to the optional <code>alt</code>' attribute.
   *
   * @return  The value can be set by dereferencing the pointer.
   */
  string* mutable_alt() {
    _have_alt_ = true;
    return &alt_;
  }


  /**
   * Sets the '<code>alt</code>' attribute.
   *
   * @param[in] value Data format for the response.
   */
  void set_alt(const string& value) {
    _have_alt_ = true;
    alt_ = value;
  }



  /**
   * Clears the '<code>fields</code>' attribute so it is no longer set.
   */
  void clear_fields() {
    _have_fields_ = false;
    client::ClearCppValueHelper(&fields_);
  }


  /**
   * Gets the optional '<code>fields</code>' attribute.
   *
   * If the value is not set then the default value will be returned.
   */
  const string& get_fields() const { return fields_; }

  /**
   * Gets a modifiable pointer to the optional <code>fields</code>' attribute.
   *
   * @return  The value can be set by dereferencing the pointer.
   */
  string* mutable_fields() {
    _have_fields_ = true;
    return &fields_;
  }


  /**
   * Sets the '<code>fields</code>' attribute.
   *
   * @param[in] value Selector specifying which fields to include in a partial
   * response.
   */
  void set_fields(const string& value) {
    _have_fields_ = true;
    fields_ = value;
  }



  /**
   * Clears the '<code>key</code>' attribute so it is no longer set.
   */
  void clear_key() {
    _have_key_ = false;
    client::ClearCppValueHelper(&key_);
  }


  /**
   * Gets the optional '<code>key</code>' attribute.
   *
   * If the value is not set then the default value will be returned.
   */
  const string& get_key() const { return key_; }

  /**
   * Gets a modifiable pointer to the optional <code>key</code>' attribute.
   *
   * @return  The value can be set by dereferencing the pointer.
   */
  string* mutable_key() {
    _have_key_ = true;
    return &key_;
  }


  /**
   * Sets the '<code>key</code>' attribute.
   *
   * @param[in] value API key. Your API key identifies your project and provides
   * you with API access, quota, and reports. Required unless you provide an
   * OAuth 2.0 token.
   */
  void set_key(const string& value) {
    _have_key_ = true;
    key_ = value;
  }



  /**
   * Clears the '<code>oauth_token</code>' attribute so it is no longer set.
   */
  void clear_oauth_token() {
    _have_oauth_token_ = false;
    client::ClearCppValueHelper(&oauth_token_);
  }


  /**
   * Gets the optional '<code>oauth_token</code>' attribute.
   *
   * If the value is not set then the default value will be returned.
   */
  const string& get_oauth_token() const { return oauth_token_; }

  /**
   * Gets a modifiable pointer to the optional <code>oauth_token</code>'
   * attribute.
   *
   * @return  The value can be set by dereferencing the pointer.
   */
  string* mutable_oauthToken() {
    _have_oauth_token_ = true;
    return &oauth_token_;
  }


  /**
   * Sets the '<code>oauth_token</code>' attribute.
   *
   * @param[in] value OAuth 2.0 token for the current user.
   */
  void set_oauth_token(const string& value) {
    _have_oauth_token_ = true;
    oauth_token_ = value;
  }



  /**
   * Clears the '<code>prettyPrint</code>' attribute so it is no longer set.
   */
  void clear_pretty_print() {
    _have_pretty_print_ = false;
    client::ClearCppValueHelper(&pretty_print_);
  }


  /**
   * Gets the optional '<code>prettyPrint</code>' attribute.
   *
   * If the value is not set then the default value will be returned.
   */
  bool get_pretty_print() const { return pretty_print_; }

  /**
   * Sets the '<code>prettyPrint</code>' attribute.
   *
   * @param[in] value Returns response with indentations and line breaks.
   */
  void set_pretty_print(bool value) {
    _have_pretty_print_ = true;
    pretty_print_ = value;
  }

  /**
   * Clears the '<code>quotaUser</code>' attribute so it is no longer set.
   */
  void clear_quota_user() {
    _have_quota_user_ = false;
    client::ClearCppValueHelper(&quota_user_);
  }


  /**
   * Gets the optional '<code>quotaUser</code>' attribute.
   *
   * If the value is not set then the default value will be returned.
   */
  const string& get_quota_user() const { return quota_user_; }

  /**
   * Gets a modifiable pointer to the optional <code>quotaUser</code>'
   * attribute.
   *
   * @return  The value can be set by dereferencing the pointer.
   */
  string* mutable_quotaUser() {
    _have_quota_user_ = true;
    return &quota_user_;
  }


  /**
   * Sets the '<code>quotaUser</code>' attribute.
   *
   * @param[in] value Available to use for quota purposes for server-side
   * applications. Can be any arbitrary string assigned to a user, but should
   * not exceed 40 characters. Overrides userIp if both are provided.
   */
  void set_quota_user(const string& value) {
    _have_quota_user_ = true;
    quota_user_ = value;
  }



  /**
   * Clears the '<code>userIp</code>' attribute so it is no longer set.
   */
  void clear_user_ip() {
    _have_user_ip_ = false;
    client::ClearCppValueHelper(&user_ip_);
  }


  /**
   * Gets the optional '<code>userIp</code>' attribute.
   *
   * If the value is not set then the default value will be returned.
   */
  const string& get_user_ip() const { return user_ip_; }

  /**
   * Gets a modifiable pointer to the optional <code>userIp</code>' attribute.
   *
   * @return  The value can be set by dereferencing the pointer.
   */
  string* mutable_userIp() {
    _have_user_ip_ = true;
    return &user_ip_;
  }


  /**
   * Sets the '<code>userIp</code>' attribute.
   *
   * @param[in] value IP address of the site where the request originates. Use
   * this if you want to enforce per-user limits.
   */
  void set_user_ip(const string& value) {
    _have_user_ip_ = true;
    user_ip_ = value;
  }

  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the
   * URI supplied to the constructor.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
      const StringPiece& variable_name,
      const client::UriTemplateConfig& config,
      string* target);

  /**
   * Appends the optional query parameters to the target URL.
   *
   * @param[in, out] target  The URL string to append to.
   */
  virtual util::Status AppendOptionalQueryParameters(string* target);


 protected:
  /**
   * Prepares the method's HTTP request to send body content as JSON.
   *
   * Only to be used for method constructors.
   */
  void AddJsonContentToRequest(const client::JsonCppData *content);

 private:
  string alt_;
  string fields_;
  string key_;
  string oauth_token_;
  bool pretty_print_;
  string quota_user_;
  string user_ip_;
  bool _have_alt_ : 1;
  bool _have_fields_ : 1;
  bool _have_key_ : 1;
  bool _have_oauth_token_ : 1;
  bool _have_pretty_print_ : 1;
  bool _have_quota_user_ : 1;
  bool _have_user_ip_ : 1;

  DISALLOW_COPY_AND_ASSIGN(AndroidPublisherServiceBaseRequest);
};



/**
 * Implements the commit method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_CommitMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   */
  EditsResource_CommitMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_CommitMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      AppEdit* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_CommitMethod);
};

/**
 * Implements the delete method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_DeleteMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   */
  EditsResource_DeleteMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_DeleteMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


 private:
  string package_name_;
  string edit_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_DeleteMethod);
};

/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   */
  EditsResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_GetMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      AppEdit* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_GetMethod);
};

/**
 * Implements the insert method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_InsertMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] _content_ The data object to insert.
   */
  EditsResource_InsertMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const AppEdit& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_InsertMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      AppEdit* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_InsertMethod);
};

/**
 * Implements the validate method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ValidateMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   */
  EditsResource_ValidateMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ValidateMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      AppEdit* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ValidateMethod);
};




/**
 * Implements the delete method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ApklistingsResource_DeleteMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The APK version code whose APK-specific
   * listings should be read or modified.
   * @param[in] language The language code (a BCP-47 language tag) of the APK-
   * specific localized listing to read or modify. For example, to select
   * Austrian German, pass "de-AT".
   */
  EditsResource_ApklistingsResource_DeleteMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code,
      const StringPiece& language);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ApklistingsResource_DeleteMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  string language_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ApklistingsResource_DeleteMethod);
};

/**
 * Implements the deleteall method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ApklistingsResource_DeleteallMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The APK version code whose APK-specific
   * listings should be read or modified.
   */
  EditsResource_ApklistingsResource_DeleteallMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ApklistingsResource_DeleteallMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ApklistingsResource_DeleteallMethod);
};

/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ApklistingsResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The APK version code whose APK-specific
   * listings should be read or modified.
   * @param[in] language The language code (a BCP-47 language tag) of the APK-
   * specific localized listing to read or modify. For example, to select
   * Austrian German, pass "de-AT".
   */
  EditsResource_ApklistingsResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code,
      const StringPiece& language);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ApklistingsResource_GetMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ApkListing* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  string language_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ApklistingsResource_GetMethod);
};

/**
 * Implements the list method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ApklistingsResource_ListMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The APK version code whose APK-specific
   * listings should be read or modified.
   */
  EditsResource_ApklistingsResource_ListMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ApklistingsResource_ListMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ApkListingsListResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ApklistingsResource_ListMethod);
};

/**
 * Implements the patch method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ApklistingsResource_PatchMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The APK version code whose APK-specific
   * listings should be read or modified.
   * @param[in] language The language code (a BCP-47 language tag) of the APK-
   * specific localized listing to read or modify. For example, to select
   * Austrian German, pass "de-AT".
   * @param[in] _content_ The data object to patch.
   */
  EditsResource_ApklistingsResource_PatchMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code,
      const StringPiece& language,
      const ApkListing& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ApklistingsResource_PatchMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ApkListing* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  string language_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ApklistingsResource_PatchMethod);
};

/**
 * Implements the update method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ApklistingsResource_UpdateMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The APK version code whose APK-specific
   * listings should be read or modified.
   * @param[in] language The language code (a BCP-47 language tag) of the APK-
   * specific localized listing to read or modify. For example, to select
   * Austrian German, pass "de-AT".
   * @param[in] _content_ The data object to update.
   */
  EditsResource_ApklistingsResource_UpdateMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code,
      const StringPiece& language,
      const ApkListing& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ApklistingsResource_UpdateMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ApkListing* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  string language_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ApklistingsResource_UpdateMethod);
};


/**
 * Implements the addexternallyhosted method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ApksResource_AddexternallyhostedMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] _content_ The data object to addexternallyhosted.
   */
  EditsResource_ApksResource_AddexternallyhostedMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const ApksAddExternallyHostedRequest& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ApksResource_AddexternallyhostedMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ApksAddExternallyHostedResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ApksResource_AddexternallyhostedMethod);
};

/**
 * Implements the list method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ApksResource_ListMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   */
  EditsResource_ApksResource_ListMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ApksResource_ListMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ApksListResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ApksResource_ListMethod);
};

/**
 * Implements the upload method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ApksResource_UploadMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] _media_content_type_ The content type of the data in the
   *            _media_content_reader_.
   * @param[in] _media_content_reader_ The media content to upload. If
   *            this is NULL then do not upload any media and ignore
   *            _media_content_type_.
   */
  EditsResource_ApksResource_UploadMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& _media_content_type_,
      client::DataReader* _media_content_reader_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ApksResource_UploadMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Apk* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }


  /**
   * Returns MediaUploader for uploading the content.
   */

  /**
   * Returns the specification for media upload using the simple protocol.
   */
  static const client::MediaUploadSpec SIMPLE_MEDIA_UPLOAD;
  /**
   * Returns the specification for media upload using the resumable protocol.
   */
  static const client::MediaUploadSpec RESUMABLE_MEDIA_UPLOAD;

 private:
  string package_name_;
  string edit_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ApksResource_UploadMethod);
};


/**
 * Implements the upload method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_DeobfuscationfilesResource_UploadMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier of the Android app for which the
   * deobfuscatiuon files are being uploaded; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The version code of the APK whose deobfuscation
   * file is being uploaded.
   * @param[in] deobfuscation_file_type
   * @param[in] _media_content_type_ The content type of the data in the
   *            _media_content_reader_.
   * @param[in] _media_content_reader_ The media content to upload. If
   *            this is NULL then do not upload any media and ignore
   *            _media_content_type_.
   */
  EditsResource_DeobfuscationfilesResource_UploadMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code,
      const StringPiece& deobfuscation_file_type,
      const StringPiece& _media_content_type_,
      client::DataReader* _media_content_reader_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_DeobfuscationfilesResource_UploadMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      DeobfuscationFilesUploadResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }


  /**
   * Returns MediaUploader for uploading the content.
   */

  /**
   * Returns the specification for media upload using the simple protocol.
   */
  static const client::MediaUploadSpec SIMPLE_MEDIA_UPLOAD;
  /**
   * Returns the specification for media upload using the resumable protocol.
   */
  static const client::MediaUploadSpec RESUMABLE_MEDIA_UPLOAD;

 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  string deobfuscation_file_type_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_DeobfuscationfilesResource_UploadMethod);
};


/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_DetailsResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   */
  EditsResource_DetailsResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_DetailsResource_GetMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      AppDetails* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_DetailsResource_GetMethod);
};

/**
 * Implements the patch method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_DetailsResource_PatchMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] _content_ The data object to patch.
   */
  EditsResource_DetailsResource_PatchMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const AppDetails& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_DetailsResource_PatchMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      AppDetails* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_DetailsResource_PatchMethod);
};

/**
 * Implements the update method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_DetailsResource_UpdateMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] _content_ The data object to update.
   */
  EditsResource_DetailsResource_UpdateMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const AppDetails& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_DetailsResource_UpdateMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      AppDetails* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_DetailsResource_UpdateMethod);
};


/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ExpansionfilesResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The version code of the APK whose Expansion
   * File configuration is being read or modified.
   * @param[in] expansion_file_type
   */
  EditsResource_ExpansionfilesResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code,
      const StringPiece& expansion_file_type);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ExpansionfilesResource_GetMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ExpansionFile* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  string expansion_file_type_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ExpansionfilesResource_GetMethod);
};

/**
 * Implements the patch method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ExpansionfilesResource_PatchMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The version code of the APK whose Expansion
   * File configuration is being read or modified.
   * @param[in] expansion_file_type
   * @param[in] _content_ The data object to patch.
   */
  EditsResource_ExpansionfilesResource_PatchMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code,
      const StringPiece& expansion_file_type,
      const ExpansionFile& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ExpansionfilesResource_PatchMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ExpansionFile* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  string expansion_file_type_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ExpansionfilesResource_PatchMethod);
};

/**
 * Implements the update method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ExpansionfilesResource_UpdateMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The version code of the APK whose Expansion
   * File configuration is being read or modified.
   * @param[in] expansion_file_type
   * @param[in] _content_ The data object to update.
   */
  EditsResource_ExpansionfilesResource_UpdateMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code,
      const StringPiece& expansion_file_type,
      const ExpansionFile& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ExpansionfilesResource_UpdateMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ExpansionFile* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  string expansion_file_type_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ExpansionfilesResource_UpdateMethod);
};

/**
 * Implements the upload method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ExpansionfilesResource_UploadMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] apk_version_code The version code of the APK whose Expansion
   * File configuration is being read or modified.
   * @param[in] expansion_file_type
   * @param[in] _media_content_type_ The content type of the data in the
   *            _media_content_reader_.
   * @param[in] _media_content_reader_ The media content to upload. If
   *            this is NULL then do not upload any media and ignore
   *            _media_content_type_.
   */
  EditsResource_ExpansionfilesResource_UploadMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const int32& apk_version_code,
      const StringPiece& expansion_file_type,
      const StringPiece& _media_content_type_,
      client::DataReader* _media_content_reader_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ExpansionfilesResource_UploadMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ExpansionFilesUploadResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }


  /**
   * Returns MediaUploader for uploading the content.
   */

  /**
   * Returns the specification for media upload using the simple protocol.
   */
  static const client::MediaUploadSpec SIMPLE_MEDIA_UPLOAD;
  /**
   * Returns the specification for media upload using the resumable protocol.
   */
  static const client::MediaUploadSpec RESUMABLE_MEDIA_UPLOAD;

 private:
  string package_name_;
  string edit_id_;
  int32 apk_version_code_;
  string expansion_file_type_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ExpansionfilesResource_UploadMethod);
};


/**
 * Implements the delete method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ImagesResource_DeleteMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] language The language code (a BCP-47 language tag) of the
   * localized listing whose images are to read or modified. For example, to
   * select Austrian German, pass "de-AT".
   * @param[in] image_type
   * @param[in] image_id Unique identifier an image within the set of images
   * attached to this edit.
   */
  EditsResource_ImagesResource_DeleteMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& language,
      const StringPiece& image_type,
      const StringPiece& image_id);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ImagesResource_DeleteMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


 private:
  string package_name_;
  string edit_id_;
  string language_;
  string image_type_;
  string image_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ImagesResource_DeleteMethod);
};

/**
 * Implements the deleteall method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ImagesResource_DeleteallMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] language The language code (a BCP-47 language tag) of the
   * localized listing whose images are to read or modified. For example, to
   * select Austrian German, pass "de-AT".
   * @param[in] image_type
   */
  EditsResource_ImagesResource_DeleteallMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& language,
      const StringPiece& image_type);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ImagesResource_DeleteallMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ImagesDeleteAllResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string language_;
  string image_type_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ImagesResource_DeleteallMethod);
};

/**
 * Implements the list method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ImagesResource_ListMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] language The language code (a BCP-47 language tag) of the
   * localized listing whose images are to read or modified. For example, to
   * select Austrian German, pass "de-AT".
   * @param[in] image_type
   */
  EditsResource_ImagesResource_ListMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& language,
      const StringPiece& image_type);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ImagesResource_ListMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ImagesListResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string language_;
  string image_type_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ImagesResource_ListMethod);
};

/**
 * Implements the upload method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ImagesResource_UploadMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] language The language code (a BCP-47 language tag) of the
   * localized listing whose images are to read or modified. For example, to
   * select Austrian German, pass "de-AT".
   * @param[in] image_type
   * @param[in] _media_content_type_ The content type of the data in the
   *            _media_content_reader_.
   * @param[in] _media_content_reader_ The media content to upload. If
   *            this is NULL then do not upload any media and ignore
   *            _media_content_type_.
   */
  EditsResource_ImagesResource_UploadMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& language,
      const StringPiece& image_type,
      const StringPiece& _media_content_type_,
      client::DataReader* _media_content_reader_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ImagesResource_UploadMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ImagesUploadResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }


  /**
   * Returns MediaUploader for uploading the content.
   */

  /**
   * Returns the specification for media upload using the simple protocol.
   */
  static const client::MediaUploadSpec SIMPLE_MEDIA_UPLOAD;
  /**
   * Returns the specification for media upload using the resumable protocol.
   */
  static const client::MediaUploadSpec RESUMABLE_MEDIA_UPLOAD;

 private:
  string package_name_;
  string edit_id_;
  string language_;
  string image_type_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ImagesResource_UploadMethod);
};


/**
 * Implements the delete method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ListingsResource_DeleteMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] language The language code (a BCP-47 language tag) of the
   * localized listing to read or modify. For example, to select Austrian
   * German, pass "de-AT".
   */
  EditsResource_ListingsResource_DeleteMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& language);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ListingsResource_DeleteMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


 private:
  string package_name_;
  string edit_id_;
  string language_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ListingsResource_DeleteMethod);
};

/**
 * Implements the deleteall method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ListingsResource_DeleteallMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   */
  EditsResource_ListingsResource_DeleteallMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ListingsResource_DeleteallMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


 private:
  string package_name_;
  string edit_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ListingsResource_DeleteallMethod);
};

/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ListingsResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] language The language code (a BCP-47 language tag) of the
   * localized listing to read or modify. For example, to select Austrian
   * German, pass "de-AT".
   */
  EditsResource_ListingsResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& language);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ListingsResource_GetMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Listing* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string language_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ListingsResource_GetMethod);
};

/**
 * Implements the list method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ListingsResource_ListMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   */
  EditsResource_ListingsResource_ListMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ListingsResource_ListMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ListingsListResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ListingsResource_ListMethod);
};

/**
 * Implements the patch method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ListingsResource_PatchMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] language The language code (a BCP-47 language tag) of the
   * localized listing to read or modify. For example, to select Austrian
   * German, pass "de-AT".
   * @param[in] _content_ The data object to patch.
   */
  EditsResource_ListingsResource_PatchMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& language,
      const Listing& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ListingsResource_PatchMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Listing* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string language_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ListingsResource_PatchMethod);
};

/**
 * Implements the update method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_ListingsResource_UpdateMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] language The language code (a BCP-47 language tag) of the
   * localized listing to read or modify. For example, to select Austrian
   * German, pass "de-AT".
   * @param[in] _content_ The data object to update.
   */
  EditsResource_ListingsResource_UpdateMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& language,
      const Listing& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_ListingsResource_UpdateMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Listing* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string language_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_ListingsResource_UpdateMethod);
};


/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_TestersResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] track
   */
  EditsResource_TestersResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& track);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_TestersResource_GetMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Testers* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string track_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_TestersResource_GetMethod);
};

/**
 * Implements the patch method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_TestersResource_PatchMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] track
   * @param[in] _content_ The data object to patch.
   */
  EditsResource_TestersResource_PatchMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& track,
      const Testers& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_TestersResource_PatchMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Testers* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string track_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_TestersResource_PatchMethod);
};

/**
 * Implements the update method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_TestersResource_UpdateMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] track
   * @param[in] _content_ The data object to update.
   */
  EditsResource_TestersResource_UpdateMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& track,
      const Testers& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_TestersResource_UpdateMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Testers* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string track_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_TestersResource_UpdateMethod);
};


/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_TracksResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] track The track type to read or modify.
   */
  EditsResource_TracksResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& track);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_TracksResource_GetMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Track* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string track_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_TracksResource_GetMethod);
};

/**
 * Implements the list method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_TracksResource_ListMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   */
  EditsResource_TracksResource_ListMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_TracksResource_ListMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      TracksListResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_TracksResource_ListMethod);
};

/**
 * Implements the patch method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_TracksResource_PatchMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] track The track type to read or modify.
   * @param[in] _content_ The data object to patch.
   */
  EditsResource_TracksResource_PatchMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& track,
      const Track& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_TracksResource_PatchMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Track* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string track_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_TracksResource_PatchMethod);
};

/**
 * Implements the update method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class EditsResource_TracksResource_UpdateMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app that is being
   * updated; for example, "com.spiffygame".
   * @param[in] edit_id Unique identifier for this edit.
   * @param[in] track The track type to read or modify.
   * @param[in] _content_ The data object to update.
   */
  EditsResource_TracksResource_UpdateMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& edit_id,
      const StringPiece& track,
      const Track& _content_);

  /**
   * Standard destructor.
   */
  virtual ~EditsResource_TracksResource_UpdateMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Track* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string edit_id_;
  string track_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(EditsResource_TracksResource_UpdateMethod);
};



/**
 * Implements the list method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * No authorization scopes are required for this method.
 */
class EntitlementsResource_ListMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name The package name of the application the inapp
   * product was sold in (for example, 'com.some.thing').
   */
  EntitlementsResource_ListMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name);

  /**
   * Standard destructor.
   */
  virtual ~EntitlementsResource_ListMethod();


    /**
     * Clears the '<code>maxResults</code>' attribute so it is no longer set.
     */
    void clear_max_results() {
      _have_max_results_ = false;
      client::ClearCppValueHelper(&max_results_);
    }


    /**
     * Gets the optional '<code>maxResults</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    uint32 get_max_results() const { return max_results_; }

    /**
     * Sets the '<code>maxResults</code>' attribute.
     *
     * @param[in] value
     */
    void set_max_results(uint32 value) {
      _have_max_results_ = true;
      max_results_ = value;
    }

    /**
     * Clears the '<code>productId</code>' attribute so it is no longer set.
     */
    void clear_product_id() {
      _have_product_id_ = false;
      client::ClearCppValueHelper(&product_id_);
    }


    /**
     * Gets the optional '<code>productId</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    const string& get_product_id() const { return product_id_; }

    /**
     * Gets a modifiable pointer to the optional <code>productId</code>'
     * attribute.
     *
     * @return  The value can be set by dereferencing the pointer.
     */
    string* mutable_productId() {
      _have_product_id_ = true;
      return &product_id_;
    }


    /**
     * Sets the '<code>productId</code>' attribute.
     *
     * @param[in] value The product id of the inapp product (for example,
     * 'sku1'). This can be used to restrict the result set.
     */
    void set_product_id(const string& value) {
      _have_product_id_ = true;
      product_id_ = value;
    }



    /**
     * Clears the '<code>startIndex</code>' attribute so it is no longer set.
     */
    void clear_start_index() {
      _have_start_index_ = false;
      client::ClearCppValueHelper(&start_index_);
    }


    /**
     * Gets the optional '<code>startIndex</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    uint32 get_start_index() const { return start_index_; }

    /**
     * Sets the '<code>startIndex</code>' attribute.
     *
     * @param[in] value
     */
    void set_start_index(uint32 value) {
      _have_start_index_ = true;
      start_index_ = value;
    }

    /**
     * Clears the '<code>token</code>' attribute so it is no longer set.
     */
    void clear_token() {
      _have_token_ = false;
      client::ClearCppValueHelper(&token_);
    }


    /**
     * Gets the optional '<code>token</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    const string& get_token() const { return token_; }

    /**
     * Gets a modifiable pointer to the optional <code>token</code>' attribute.
     *
     * @return  The value can be set by dereferencing the pointer.
     */
    string* mutable_token() {
      _have_token_ = true;
      return &token_;
    }


    /**
     * Sets the '<code>token</code>' attribute.
     *
     * @param[in] value
     */
    void set_token(const string& value) {
      _have_token_ = true;
      token_ = value;
    }

  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);

  /**
   * Appends the optional query parameters to the target URL.
   *
   * @param[in, out] target  The URL string to append to.
   */
  virtual util::Status AppendOptionalQueryParameters(string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      EntitlementsListResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  uint32 max_results_;
  string product_id_;
  uint32 start_index_;
  string token_;
  bool _have_max_results_ : 1;
  bool _have_product_id_ : 1;
  bool _have_start_index_ : 1;
  bool _have_token_ : 1;
  DISALLOW_COPY_AND_ASSIGN(EntitlementsResource_ListMethod);
};



/**
 * Implements the batch method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class InappproductsResource_BatchMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] _content_ The data object to batch.
   */
  InappproductsResource_BatchMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const InappproductsBatchRequest& _content_);

  /**
   * Standard destructor.
   */
  virtual ~InappproductsResource_BatchMethod();

  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      InappproductsBatchResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string _content_;
  DISALLOW_COPY_AND_ASSIGN(InappproductsResource_BatchMethod);
};

/**
 * Implements the delete method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class InappproductsResource_DeleteMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app with the in-
   * app product; for example, "com.spiffygame".
   * @param[in] sku Unique identifier for the in-app product.
   */
  InappproductsResource_DeleteMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& sku);

  /**
   * Standard destructor.
   */
  virtual ~InappproductsResource_DeleteMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


 private:
  string package_name_;
  string sku_;
  DISALLOW_COPY_AND_ASSIGN(InappproductsResource_DeleteMethod);
};

/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class InappproductsResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name
   * @param[in] sku Unique identifier for the in-app product.
   */
  InappproductsResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& sku);

  /**
   * Standard destructor.
   */
  virtual ~InappproductsResource_GetMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      InAppProduct* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string sku_;
  DISALLOW_COPY_AND_ASSIGN(InappproductsResource_GetMethod);
};

/**
 * Implements the insert method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class InappproductsResource_InsertMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app; for example,
   * "com.spiffygame".
   * @param[in] _content_ The data object to insert.
   */
  InappproductsResource_InsertMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const InAppProduct& _content_);

  /**
   * Standard destructor.
   */
  virtual ~InappproductsResource_InsertMethod();


    /**
     * Clears the '<code>autoConvertMissingPrices</code>' attribute so it is no
     * longer set.
     */
    void clear_auto_convert_missing_prices() {
      _have_auto_convert_missing_prices_ = false;
      client::ClearCppValueHelper(&auto_convert_missing_prices_);
    }


    /**
     * Gets the optional '<code>autoConvertMissingPrices</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    bool get_auto_convert_missing_prices() const { return auto_convert_missing_prices_; }

    /**
     * Sets the '<code>autoConvertMissingPrices</code>' attribute.
     *
     * @param[in] value If true the prices for all regions targeted by the
     * parent app that don't have a price specified for this in-app product will
     * be auto converted to the target currency based on the default price.
     * Defaults to false.
     */
    void set_auto_convert_missing_prices(bool value) {
      _have_auto_convert_missing_prices_ = true;
      auto_convert_missing_prices_ = value;
    }

  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);

  /**
   * Appends the optional query parameters to the target URL.
   *
   * @param[in, out] target  The URL string to append to.
   */
  virtual util::Status AppendOptionalQueryParameters(string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      InAppProduct* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  bool auto_convert_missing_prices_;
  bool _have_auto_convert_missing_prices_ : 1;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(InappproductsResource_InsertMethod);
};

/**
 * Implements the list method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class InappproductsResource_ListMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app with in-app
   * products; for example, "com.spiffygame".
   */
  InappproductsResource_ListMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name);

  /**
   * Standard destructor.
   */
  virtual ~InappproductsResource_ListMethod();


    /**
     * Clears the '<code>maxResults</code>' attribute so it is no longer set.
     */
    void clear_max_results() {
      _have_max_results_ = false;
      client::ClearCppValueHelper(&max_results_);
    }


    /**
     * Gets the optional '<code>maxResults</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    uint32 get_max_results() const { return max_results_; }

    /**
     * Sets the '<code>maxResults</code>' attribute.
     *
     * @param[in] value
     */
    void set_max_results(uint32 value) {
      _have_max_results_ = true;
      max_results_ = value;
    }

    /**
     * Clears the '<code>startIndex</code>' attribute so it is no longer set.
     */
    void clear_start_index() {
      _have_start_index_ = false;
      client::ClearCppValueHelper(&start_index_);
    }


    /**
     * Gets the optional '<code>startIndex</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    uint32 get_start_index() const { return start_index_; }

    /**
     * Sets the '<code>startIndex</code>' attribute.
     *
     * @param[in] value
     */
    void set_start_index(uint32 value) {
      _have_start_index_ = true;
      start_index_ = value;
    }

    /**
     * Clears the '<code>token</code>' attribute so it is no longer set.
     */
    void clear_token() {
      _have_token_ = false;
      client::ClearCppValueHelper(&token_);
    }


    /**
     * Gets the optional '<code>token</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    const string& get_token() const { return token_; }

    /**
     * Gets a modifiable pointer to the optional <code>token</code>' attribute.
     *
     * @return  The value can be set by dereferencing the pointer.
     */
    string* mutable_token() {
      _have_token_ = true;
      return &token_;
    }


    /**
     * Sets the '<code>token</code>' attribute.
     *
     * @param[in] value
     */
    void set_token(const string& value) {
      _have_token_ = true;
      token_ = value;
    }

  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);

  /**
   * Appends the optional query parameters to the target URL.
   *
   * @param[in, out] target  The URL string to append to.
   */
  virtual util::Status AppendOptionalQueryParameters(string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      InappproductsListResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  uint32 max_results_;
  uint32 start_index_;
  string token_;
  bool _have_max_results_ : 1;
  bool _have_start_index_ : 1;
  bool _have_token_ : 1;
  DISALLOW_COPY_AND_ASSIGN(InappproductsResource_ListMethod);
};

/**
 * Implements the patch method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class InappproductsResource_PatchMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app with the in-
   * app product; for example, "com.spiffygame".
   * @param[in] sku Unique identifier for the in-app product.
   * @param[in] _content_ The data object to patch.
   */
  InappproductsResource_PatchMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& sku,
      const InAppProduct& _content_);

  /**
   * Standard destructor.
   */
  virtual ~InappproductsResource_PatchMethod();


    /**
     * Clears the '<code>autoConvertMissingPrices</code>' attribute so it is no
     * longer set.
     */
    void clear_auto_convert_missing_prices() {
      _have_auto_convert_missing_prices_ = false;
      client::ClearCppValueHelper(&auto_convert_missing_prices_);
    }


    /**
     * Gets the optional '<code>autoConvertMissingPrices</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    bool get_auto_convert_missing_prices() const { return auto_convert_missing_prices_; }

    /**
     * Sets the '<code>autoConvertMissingPrices</code>' attribute.
     *
     * @param[in] value If true the prices for all regions targeted by the
     * parent app that don't have a price specified for this in-app product will
     * be auto converted to the target currency based on the default price.
     * Defaults to false.
     */
    void set_auto_convert_missing_prices(bool value) {
      _have_auto_convert_missing_prices_ = true;
      auto_convert_missing_prices_ = value;
    }

  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);

  /**
   * Appends the optional query parameters to the target URL.
   *
   * @param[in, out] target  The URL string to append to.
   */
  virtual util::Status AppendOptionalQueryParameters(string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      InAppProduct* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string sku_;
  bool auto_convert_missing_prices_;
  bool _have_auto_convert_missing_prices_ : 1;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(InappproductsResource_PatchMethod);
};

/**
 * Implements the update method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class InappproductsResource_UpdateMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app with the in-
   * app product; for example, "com.spiffygame".
   * @param[in] sku Unique identifier for the in-app product.
   * @param[in] _content_ The data object to update.
   */
  InappproductsResource_UpdateMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& sku,
      const InAppProduct& _content_);

  /**
   * Standard destructor.
   */
  virtual ~InappproductsResource_UpdateMethod();


    /**
     * Clears the '<code>autoConvertMissingPrices</code>' attribute so it is no
     * longer set.
     */
    void clear_auto_convert_missing_prices() {
      _have_auto_convert_missing_prices_ = false;
      client::ClearCppValueHelper(&auto_convert_missing_prices_);
    }


    /**
     * Gets the optional '<code>autoConvertMissingPrices</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    bool get_auto_convert_missing_prices() const { return auto_convert_missing_prices_; }

    /**
     * Sets the '<code>autoConvertMissingPrices</code>' attribute.
     *
     * @param[in] value If true the prices for all regions targeted by the
     * parent app that don't have a price specified for this in-app product will
     * be auto converted to the target currency based on the default price.
     * Defaults to false.
     */
    void set_auto_convert_missing_prices(bool value) {
      _have_auto_convert_missing_prices_ = true;
      auto_convert_missing_prices_ = value;
    }

  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);

  /**
   * Appends the optional query parameters to the target URL.
   *
   * @param[in, out] target  The URL string to append to.
   */
  virtual util::Status AppendOptionalQueryParameters(string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      InAppProduct* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string sku_;
  bool auto_convert_missing_prices_;
  bool _have_auto_convert_missing_prices_ : 1;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(InappproductsResource_UpdateMethod);
};






/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class PurchasesResource_ProductsResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name The package name of the application the inapp
   * product was sold in (for example, 'com.some.thing').
   * @param[in] product_id The inapp product SKU (for example,
   * 'com.some.thing.inapp1').
   * @param[in] token The token provided to the user's device when the inapp
   * product was purchased.
   */
  PurchasesResource_ProductsResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& product_id,
      const StringPiece& token);

  /**
   * Standard destructor.
   */
  virtual ~PurchasesResource_ProductsResource_GetMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ProductPurchase* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string product_id_;
  string token_;
  DISALLOW_COPY_AND_ASSIGN(PurchasesResource_ProductsResource_GetMethod);
};


/**
 * Implements the cancel method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class PurchasesResource_SubscriptionsResource_CancelMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name The package name of the application for which this
   * subscription was purchased (for example, 'com.some.thing').
   * @param[in] subscription_id The purchased subscription ID (for example,
   * 'monthly001').
   * @param[in] token The token provided to the user's device when the
   * subscription was purchased.
   */
  PurchasesResource_SubscriptionsResource_CancelMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& subscription_id,
      const StringPiece& token);

  /**
   * Standard destructor.
   */
  virtual ~PurchasesResource_SubscriptionsResource_CancelMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


 private:
  string package_name_;
  string subscription_id_;
  string token_;
  DISALLOW_COPY_AND_ASSIGN(PurchasesResource_SubscriptionsResource_CancelMethod);
};

/**
 * Implements the defer method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class PurchasesResource_SubscriptionsResource_DeferMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name The package name of the application for which this
   * subscription was purchased (for example, 'com.some.thing').
   * @param[in] subscription_id The purchased subscription ID (for example,
   * 'monthly001').
   * @param[in] token The token provided to the user's device when the
   * subscription was purchased.
   * @param[in] _content_ The data object to defer.
   */
  PurchasesResource_SubscriptionsResource_DeferMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& subscription_id,
      const StringPiece& token,
      const SubscriptionPurchasesDeferRequest& _content_);

  /**
   * Standard destructor.
   */
  virtual ~PurchasesResource_SubscriptionsResource_DeferMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      SubscriptionPurchasesDeferResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string subscription_id_;
  string token_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(PurchasesResource_SubscriptionsResource_DeferMethod);
};

/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class PurchasesResource_SubscriptionsResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name The package name of the application for which this
   * subscription was purchased (for example, 'com.some.thing').
   * @param[in] subscription_id The purchased subscription ID (for example,
   * 'monthly001').
   * @param[in] token The token provided to the user's device when the
   * subscription was purchased.
   */
  PurchasesResource_SubscriptionsResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& subscription_id,
      const StringPiece& token);

  /**
   * Standard destructor.
   */
  virtual ~PurchasesResource_SubscriptionsResource_GetMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      SubscriptionPurchase* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string subscription_id_;
  string token_;
  DISALLOW_COPY_AND_ASSIGN(PurchasesResource_SubscriptionsResource_GetMethod);
};

/**
 * Implements the refund method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class PurchasesResource_SubscriptionsResource_RefundMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name The package name of the application for which this
   * subscription was purchased (for example, 'com.some.thing').
   * @param[in] subscription_id The purchased subscription ID (for example,
   * 'monthly001').
   * @param[in] token The token provided to the user's device when the
   * subscription was purchased.
   */
  PurchasesResource_SubscriptionsResource_RefundMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& subscription_id,
      const StringPiece& token);

  /**
   * Standard destructor.
   */
  virtual ~PurchasesResource_SubscriptionsResource_RefundMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


 private:
  string package_name_;
  string subscription_id_;
  string token_;
  DISALLOW_COPY_AND_ASSIGN(PurchasesResource_SubscriptionsResource_RefundMethod);
};

/**
 * Implements the revoke method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class PurchasesResource_SubscriptionsResource_RevokeMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name The package name of the application for which this
   * subscription was purchased (for example, 'com.some.thing').
   * @param[in] subscription_id The purchased subscription ID (for example,
   * 'monthly001').
   * @param[in] token The token provided to the user's device when the
   * subscription was purchased.
   */
  PurchasesResource_SubscriptionsResource_RevokeMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& subscription_id,
      const StringPiece& token);

  /**
   * Standard destructor.
   */
  virtual ~PurchasesResource_SubscriptionsResource_RevokeMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


 private:
  string package_name_;
  string subscription_id_;
  string token_;
  DISALLOW_COPY_AND_ASSIGN(PurchasesResource_SubscriptionsResource_RevokeMethod);
};


/**
 * Implements the list method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class PurchasesResource_VoidedpurchasesResource_ListMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name The package name of the application for which
   * voided purchases need to be returned (for example, 'com.some.thing').
   */
  PurchasesResource_VoidedpurchasesResource_ListMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name);

  /**
   * Standard destructor.
   */
  virtual ~PurchasesResource_VoidedpurchasesResource_ListMethod();


    /**
     * Clears the '<code>endTime</code>' attribute so it is no longer set.
     */
    void clear_end_time() {
      _have_end_time_ = false;
      client::ClearCppValueHelper(&end_time_);
    }


    /**
     * Gets the optional '<code>endTime</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    int64 get_end_time() const { return end_time_; }

    /**
     * Sets the '<code>endTime</code>' attribute.
     *
     * @param[in] value The time, in milliseconds since the Epoch, of the newest
     * voided in-app product purchase that you want to see in the response. The
     * value of this parameter cannot be greater than the current time and is
     * ignored if a pagination token is set. Default value is current time.
     * Note: This filter is applied on the time at which the record is seen as
     * voided by our systems and not the actual voided time returned in the
     * response.
     */
    void set_end_time(int64 value) {
      _have_end_time_ = true;
      end_time_ = value;
    }

    /**
     * Clears the '<code>maxResults</code>' attribute so it is no longer set.
     */
    void clear_max_results() {
      _have_max_results_ = false;
      client::ClearCppValueHelper(&max_results_);
    }


    /**
     * Gets the optional '<code>maxResults</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    uint32 get_max_results() const { return max_results_; }

    /**
     * Sets the '<code>maxResults</code>' attribute.
     *
     * @param[in] value
     */
    void set_max_results(uint32 value) {
      _have_max_results_ = true;
      max_results_ = value;
    }

    /**
     * Clears the '<code>startIndex</code>' attribute so it is no longer set.
     */
    void clear_start_index() {
      _have_start_index_ = false;
      client::ClearCppValueHelper(&start_index_);
    }


    /**
     * Gets the optional '<code>startIndex</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    uint32 get_start_index() const { return start_index_; }

    /**
     * Sets the '<code>startIndex</code>' attribute.
     *
     * @param[in] value
     */
    void set_start_index(uint32 value) {
      _have_start_index_ = true;
      start_index_ = value;
    }

    /**
     * Clears the '<code>startTime</code>' attribute so it is no longer set.
     */
    void clear_start_time() {
      _have_start_time_ = false;
      client::ClearCppValueHelper(&start_time_);
    }


    /**
     * Gets the optional '<code>startTime</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    int64 get_start_time() const { return start_time_; }

    /**
     * Sets the '<code>startTime</code>' attribute.
     *
     * @param[in] value The time, in milliseconds since the Epoch, of the oldest
     * voided in-app product purchase that you want to see in the response. The
     * value of this parameter cannot be older than 30 days and is ignored if a
     * pagination token is set. Default value is current time minus 30 days.
     * Note: This filter is applied on the time at which the record is seen as
     * voided by our systems and not the actual voided time returned in the
     * response.
     */
    void set_start_time(int64 value) {
      _have_start_time_ = true;
      start_time_ = value;
    }

    /**
     * Clears the '<code>token</code>' attribute so it is no longer set.
     */
    void clear_token() {
      _have_token_ = false;
      client::ClearCppValueHelper(&token_);
    }


    /**
     * Gets the optional '<code>token</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    const string& get_token() const { return token_; }

    /**
     * Gets a modifiable pointer to the optional <code>token</code>' attribute.
     *
     * @return  The value can be set by dereferencing the pointer.
     */
    string* mutable_token() {
      _have_token_ = true;
      return &token_;
    }


    /**
     * Sets the '<code>token</code>' attribute.
     *
     * @param[in] value
     */
    void set_token(const string& value) {
      _have_token_ = true;
      token_ = value;
    }

  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);

  /**
   * Appends the optional query parameters to the target URL.
   *
   * @param[in, out] target  The URL string to append to.
   */
  virtual util::Status AppendOptionalQueryParameters(string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      VoidedPurchasesListResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  int64 end_time_;
  uint32 max_results_;
  uint32 start_index_;
  int64 start_time_;
  string token_;
  bool _have_end_time_ : 1;
  bool _have_max_results_ : 1;
  bool _have_start_index_ : 1;
  bool _have_start_time_ : 1;
  bool _have_token_ : 1;
  DISALLOW_COPY_AND_ASSIGN(PurchasesResource_VoidedpurchasesResource_ListMethod);
};



/**
 * Implements the get method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class ReviewsResource_GetMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app for which we
   * want reviews; for example, "com.spiffygame".
   * @param[in] review_id
   */
  ReviewsResource_GetMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& review_id);

  /**
   * Standard destructor.
   */
  virtual ~ReviewsResource_GetMethod();


    /**
     * Clears the '<code>translationLanguage</code>' attribute so it is no
     * longer set.
     */
    void clear_translation_language() {
      _have_translation_language_ = false;
      client::ClearCppValueHelper(&translation_language_);
    }


    /**
     * Gets the optional '<code>translationLanguage</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    const string& get_translation_language() const { return translation_language_; }

    /**
     * Gets a modifiable pointer to the optional
     * <code>translationLanguage</code>' attribute.
     *
     * @return  The value can be set by dereferencing the pointer.
     */
    string* mutable_translationLanguage() {
      _have_translation_language_ = true;
      return &translation_language_;
    }


    /**
     * Sets the '<code>translationLanguage</code>' attribute.
     *
     * @param[in] value
     */
    void set_translation_language(const string& value) {
      _have_translation_language_ = true;
      translation_language_ = value;
    }

  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);

  /**
   * Appends the optional query parameters to the target URL.
   *
   * @param[in, out] target  The URL string to append to.
   */
  virtual util::Status AppendOptionalQueryParameters(string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      Review* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string review_id_;
  string translation_language_;
  bool _have_translation_language_ : 1;
  DISALLOW_COPY_AND_ASSIGN(ReviewsResource_GetMethod);
};

/**
 * Implements the list method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class ReviewsResource_ListMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app for which we
   * want reviews; for example, "com.spiffygame".
   */
  ReviewsResource_ListMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name);

  /**
   * Standard destructor.
   */
  virtual ~ReviewsResource_ListMethod();


    /**
     * Clears the '<code>maxResults</code>' attribute so it is no longer set.
     */
    void clear_max_results() {
      _have_max_results_ = false;
      client::ClearCppValueHelper(&max_results_);
    }


    /**
     * Gets the optional '<code>maxResults</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    uint32 get_max_results() const { return max_results_; }

    /**
     * Sets the '<code>maxResults</code>' attribute.
     *
     * @param[in] value
     */
    void set_max_results(uint32 value) {
      _have_max_results_ = true;
      max_results_ = value;
    }

    /**
     * Clears the '<code>startIndex</code>' attribute so it is no longer set.
     */
    void clear_start_index() {
      _have_start_index_ = false;
      client::ClearCppValueHelper(&start_index_);
    }


    /**
     * Gets the optional '<code>startIndex</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    uint32 get_start_index() const { return start_index_; }

    /**
     * Sets the '<code>startIndex</code>' attribute.
     *
     * @param[in] value
     */
    void set_start_index(uint32 value) {
      _have_start_index_ = true;
      start_index_ = value;
    }

    /**
     * Clears the '<code>token</code>' attribute so it is no longer set.
     */
    void clear_token() {
      _have_token_ = false;
      client::ClearCppValueHelper(&token_);
    }


    /**
     * Gets the optional '<code>token</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    const string& get_token() const { return token_; }

    /**
     * Gets a modifiable pointer to the optional <code>token</code>' attribute.
     *
     * @return  The value can be set by dereferencing the pointer.
     */
    string* mutable_token() {
      _have_token_ = true;
      return &token_;
    }


    /**
     * Sets the '<code>token</code>' attribute.
     *
     * @param[in] value
     */
    void set_token(const string& value) {
      _have_token_ = true;
      token_ = value;
    }



    /**
     * Clears the '<code>translationLanguage</code>' attribute so it is no
     * longer set.
     */
    void clear_translation_language() {
      _have_translation_language_ = false;
      client::ClearCppValueHelper(&translation_language_);
    }


    /**
     * Gets the optional '<code>translationLanguage</code>' attribute.
     *
     * If the value is not set then the default value will be returned.
     */
    const string& get_translation_language() const { return translation_language_; }

    /**
     * Gets a modifiable pointer to the optional
     * <code>translationLanguage</code>' attribute.
     *
     * @return  The value can be set by dereferencing the pointer.
     */
    string* mutable_translationLanguage() {
      _have_translation_language_ = true;
      return &translation_language_;
    }


    /**
     * Sets the '<code>translationLanguage</code>' attribute.
     *
     * @param[in] value
     */
    void set_translation_language(const string& value) {
      _have_translation_language_ = true;
      translation_language_ = value;
    }

  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);

  /**
   * Appends the optional query parameters to the target URL.
   *
   * @param[in, out] target  The URL string to append to.
   */
  virtual util::Status AppendOptionalQueryParameters(string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ReviewsListResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  uint32 max_results_;
  uint32 start_index_;
  string token_;
  string translation_language_;
  bool _have_max_results_ : 1;
  bool _have_start_index_ : 1;
  bool _have_token_ : 1;
  bool _have_translation_language_ : 1;
  DISALLOW_COPY_AND_ASSIGN(ReviewsResource_ListMethod);
};

/**
 * Implements the reply method.
 *
 * @ingroup ServiceMethod
 *
 * This class uses the Command Pattern. Construct an instance with the required
 * parameters, then set any additional optional parameters by using the
 * attribute setters. To invoke the method, call <code>Execute</code>.
 *
 * One or more of these authorization scopes are required for this method:
 * https://www.googleapis.com/auth/androidpublisher
 */
class ReviewsResource_ReplyMethod : public AndroidPublisherServiceBaseRequest {
 public:
  /**
   * The standard constructor takes all the required method parameters.
   * @param[in] _service_  The service instance to send to when executed.
   * @param[in] _credential_  If not NULL, the credential to authorize with.
   *            In practice this is supplied by the user code that is
   *            creating the method instance.
   * @param[in] package_name Unique identifier for the Android app for which we
   * want reviews; for example, "com.spiffygame".
   * @param[in] review_id
   * @param[in] _content_ The data object to reply.
   */
  ReviewsResource_ReplyMethod(
      const AndroidPublisherService* _service_,
      client::AuthorizationCredential* _credential_,
      const StringPiece& package_name,
      const StringPiece& review_id,
      const ReviewsReplyRequest& _content_);

  /**
   * Standard destructor.
   */
  virtual ~ReviewsResource_ReplyMethod();


  /**
   * Appends variable value to the target string.
   *
   * This is a helper function used to resolve templated variables in the URI.
   *
   * @param[in] variable_name  The name of the templated variable.
   * @param[in] config  A pass-through parameter used for lists and maps.
   * @param[in, out] target The string to append the value to.
   */
  virtual util::Status AppendVariable(
        const StringPiece& variable_name,
        const client::UriTemplateConfig& config,
        string* target);


  /**
   * Executes the method and parses the response into a data object on success.
   *
   * @param[out] data Loads from the response payload JSON data on success.
   *
   * @return Success if an HTTP 2xx response was received. Otherwise the
   *         status indicates the reason for failure. Finer detail may be
   *         available from the underlying http_request to distinguish the
   *         transport_status from the overal HTTP request status.
   */
  util::Status ExecuteAndParseResponse(
      ReviewsReplyResponse* data) {
    return AndroidPublisherServiceBaseRequest::ExecuteAndParseResponse(data);
  }

 private:
  string package_name_;
  string review_id_;  string _content_;
  DISALLOW_COPY_AND_ASSIGN(ReviewsResource_ReplyMethod);
};



/**
 * Service definition for AndroidPublisherService (v2).
 *
 * @ingroup ServiceClass
 *
 * For more information about this service, see the API Documentation at
 * <a href='https://developers.google.com/android-publisher'>'https://developers.google.com/android-publisher</a>
 */
class AndroidPublisherService : public client::ClientService {
 public:
  /**
   * The name of the API that this was generated from.
   */
  static const char googleapis_API_NAME[];

  /**
   * The version of the API that this interface was generated from.
   */
  static const char googleapis_API_VERSION[];

  /**
   * The code generator used to generate this API.
   */
  static const char googleapis_API_GENERATOR[];


  /**
   * Acts as message factory for accessing  data.
   *
   * @ingroup ServiceClass
   */
  class EditsResource {
   public:
    /**
     * Standard constructor.
     *
     * @param[in] service  The service instance is used to bind to the
     *            methods created from this resource instance.  This will be
     *            the service that methods are invoked on.
     */
    explicit EditsResource(AndroidPublisherService* service);

    /**
     * Standard destructor.
     */
    ~EditsResource() {}

    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class ApklistingsResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit ApklistingsResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~ApklistingsResource() {}


      /**
       * Creates a new EditsResource_ApklistingsResource_DeleteMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The APK version code whose APK-specific
       * listings should be read or modified.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * APK-specific localized listing to read or modify. For example, to
       * select Austrian German, pass "de-AT".
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ApklistingsResource_DeleteMethod* NewDeleteMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code,
          const StringPiece& language) const;

      /**
       * Creates a new EditsResource_ApklistingsResource_DeleteallMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The APK version code whose APK-specific
       * listings should be read or modified.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ApklistingsResource_DeleteallMethod* NewDeleteallMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code) const;

      /**
       * Creates a new EditsResource_ApklistingsResource_GetMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The APK version code whose APK-specific
       * listings should be read or modified.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * APK-specific localized listing to read or modify. For example, to
       * select Austrian German, pass "de-AT".
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ApklistingsResource_GetMethod* NewGetMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code,
          const StringPiece& language) const;

      /**
       * Creates a new EditsResource_ApklistingsResource_ListMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The APK version code whose APK-specific
       * listings should be read or modified.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ApklistingsResource_ListMethod* NewListMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code) const;

      /**
       * Creates a new EditsResource_ApklistingsResource_PatchMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The APK version code whose APK-specific
       * listings should be read or modified.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * APK-specific localized listing to read or modify. For example, to
       * select Austrian German, pass "de-AT".
       * @param[in] _content_ The data object to patch.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ApklistingsResource_PatchMethod* NewPatchMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code,
          const StringPiece& language,
          const ApkListing& _content_) const;

      /**
       * Creates a new EditsResource_ApklistingsResource_UpdateMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The APK version code whose APK-specific
       * listings should be read or modified.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * APK-specific localized listing to read or modify. For example, to
       * select Austrian German, pass "de-AT".
       * @param[in] _content_ The data object to update.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ApklistingsResource_UpdateMethod* NewUpdateMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code,
          const StringPiece& language,
          const ApkListing& _content_) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(ApklistingsResource);
    };
    /**
     * Gets the apklistings resource method factory.
     *
     * @return ApklistingsResource for creating methods.
     */
    const ApklistingsResource& get_apklistings() const {
      return apklistings_;
    }


    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class ApksResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit ApksResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~ApksResource() {}


      /**
       * Creates a new EditsResource_ApksResource_AddexternallyhostedMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] _content_ The data object to addexternallyhosted.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ApksResource_AddexternallyhostedMethod* NewAddexternallyhostedMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const ApksAddExternallyHostedRequest& _content_) const;

      /**
       * Creates a new EditsResource_ApksResource_ListMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ApksResource_ListMethod* NewListMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id) const;

      /**
       * Creates a new EditsResource_ApksResource_UploadMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] _media_content_type_ The content type of the data in the
       * _media_content_reader_.
       * @param[in] _media_content_reader_ The media content to upload. If
       * this is NULL then do not upload any media and ignore
       * _media_content_type_.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ApksResource_UploadMethod* NewUploadMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& _media_content_type_,
          client::DataReader* _media_content_reader_) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(ApksResource);
    };
    /**
     * Gets the apks resource method factory.
     *
     * @return ApksResource for creating methods.
     */
    const ApksResource& get_apks() const {
      return apks_;
    }


    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class DeobfuscationfilesResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit DeobfuscationfilesResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~DeobfuscationfilesResource() {}


      /**
       * Creates a new EditsResource_DeobfuscationfilesResource_UploadMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier of the Android app for which
       * the deobfuscatiuon files are being uploaded; for example,
       * "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The version code of the APK whose
       * deobfuscation file is being uploaded.
       * @param[in] deobfuscation_file_type
       * @param[in] _media_content_type_ The content type of the data in the
       * _media_content_reader_.
       * @param[in] _media_content_reader_ The media content to upload. If
       * this is NULL then do not upload any media and ignore
       * _media_content_type_.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_DeobfuscationfilesResource_UploadMethod* NewUploadMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code,
          const StringPiece& deobfuscation_file_type,
          const StringPiece& _media_content_type_,
          client::DataReader* _media_content_reader_) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(DeobfuscationfilesResource);
    };
    /**
     * Gets the deobfuscationfiles resource method factory.
     *
     * @return DeobfuscationfilesResource for creating methods.
     */
    const DeobfuscationfilesResource& get_deobfuscationfiles() const {
      return deobfuscationfiles_;
    }


    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class DetailsResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit DetailsResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~DetailsResource() {}


      /**
       * Creates a new EditsResource_DetailsResource_GetMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_DetailsResource_GetMethod* NewGetMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id) const;

      /**
       * Creates a new EditsResource_DetailsResource_PatchMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] _content_ The data object to patch.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_DetailsResource_PatchMethod* NewPatchMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const AppDetails& _content_) const;

      /**
       * Creates a new EditsResource_DetailsResource_UpdateMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] _content_ The data object to update.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_DetailsResource_UpdateMethod* NewUpdateMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const AppDetails& _content_) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(DetailsResource);
    };
    /**
     * Gets the details resource method factory.
     *
     * @return DetailsResource for creating methods.
     */
    const DetailsResource& get_details() const {
      return details_;
    }


    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class ExpansionfilesResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit ExpansionfilesResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~ExpansionfilesResource() {}


      /**
       * Creates a new EditsResource_ExpansionfilesResource_GetMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The version code of the APK whose Expansion
       * File configuration is being read or modified.
       * @param[in] expansion_file_type
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ExpansionfilesResource_GetMethod* NewGetMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code,
          const StringPiece& expansion_file_type) const;

      /**
       * Creates a new EditsResource_ExpansionfilesResource_PatchMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The version code of the APK whose Expansion
       * File configuration is being read or modified.
       * @param[in] expansion_file_type
       * @param[in] _content_ The data object to patch.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ExpansionfilesResource_PatchMethod* NewPatchMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code,
          const StringPiece& expansion_file_type,
          const ExpansionFile& _content_) const;

      /**
       * Creates a new EditsResource_ExpansionfilesResource_UpdateMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The version code of the APK whose Expansion
       * File configuration is being read or modified.
       * @param[in] expansion_file_type
       * @param[in] _content_ The data object to update.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ExpansionfilesResource_UpdateMethod* NewUpdateMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code,
          const StringPiece& expansion_file_type,
          const ExpansionFile& _content_) const;

      /**
       * Creates a new EditsResource_ExpansionfilesResource_UploadMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] apk_version_code The version code of the APK whose Expansion
       * File configuration is being read or modified.
       * @param[in] expansion_file_type
       * @param[in] _media_content_type_ The content type of the data in the
       * _media_content_reader_.
       * @param[in] _media_content_reader_ The media content to upload. If
       * this is NULL then do not upload any media and ignore
       * _media_content_type_.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ExpansionfilesResource_UploadMethod* NewUploadMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const int32& apk_version_code,
          const StringPiece& expansion_file_type,
          const StringPiece& _media_content_type_,
          client::DataReader* _media_content_reader_) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(ExpansionfilesResource);
    };
    /**
     * Gets the expansionfiles resource method factory.
     *
     * @return ExpansionfilesResource for creating methods.
     */
    const ExpansionfilesResource& get_expansionfiles() const {
      return expansionfiles_;
    }


    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class ImagesResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit ImagesResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~ImagesResource() {}


      /**
       * Creates a new EditsResource_ImagesResource_DeleteMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * localized listing whose images are to read or modified. For example, to
       * select Austrian German, pass "de-AT".
       * @param[in] image_type
       * @param[in] image_id Unique identifier an image within the set of images
       * attached to this edit.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ImagesResource_DeleteMethod* NewDeleteMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& language,
          const StringPiece& image_type,
          const StringPiece& image_id) const;

      /**
       * Creates a new EditsResource_ImagesResource_DeleteallMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * localized listing whose images are to read or modified. For example, to
       * select Austrian German, pass "de-AT".
       * @param[in] image_type
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ImagesResource_DeleteallMethod* NewDeleteallMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& language,
          const StringPiece& image_type) const;

      /**
       * Creates a new EditsResource_ImagesResource_ListMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * localized listing whose images are to read or modified. For example, to
       * select Austrian German, pass "de-AT".
       * @param[in] image_type
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ImagesResource_ListMethod* NewListMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& language,
          const StringPiece& image_type) const;

      /**
       * Creates a new EditsResource_ImagesResource_UploadMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * localized listing whose images are to read or modified. For example, to
       * select Austrian German, pass "de-AT".
       * @param[in] image_type
       * @param[in] _media_content_type_ The content type of the data in the
       * _media_content_reader_.
       * @param[in] _media_content_reader_ The media content to upload. If
       * this is NULL then do not upload any media and ignore
       * _media_content_type_.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ImagesResource_UploadMethod* NewUploadMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& language,
          const StringPiece& image_type,
          const StringPiece& _media_content_type_,
          client::DataReader* _media_content_reader_) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(ImagesResource);
    };
    /**
     * Gets the images resource method factory.
     *
     * @return ImagesResource for creating methods.
     */
    const ImagesResource& get_images() const {
      return images_;
    }


    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class ListingsResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit ListingsResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~ListingsResource() {}


      /**
       * Creates a new EditsResource_ListingsResource_DeleteMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * localized listing to read or modify. For example, to select Austrian
       * German, pass "de-AT".
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ListingsResource_DeleteMethod* NewDeleteMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& language) const;

      /**
       * Creates a new EditsResource_ListingsResource_DeleteallMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ListingsResource_DeleteallMethod* NewDeleteallMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id) const;

      /**
       * Creates a new EditsResource_ListingsResource_GetMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * localized listing to read or modify. For example, to select Austrian
       * German, pass "de-AT".
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ListingsResource_GetMethod* NewGetMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& language) const;

      /**
       * Creates a new EditsResource_ListingsResource_ListMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ListingsResource_ListMethod* NewListMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id) const;

      /**
       * Creates a new EditsResource_ListingsResource_PatchMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * localized listing to read or modify. For example, to select Austrian
       * German, pass "de-AT".
       * @param[in] _content_ The data object to patch.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ListingsResource_PatchMethod* NewPatchMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& language,
          const Listing& _content_) const;

      /**
       * Creates a new EditsResource_ListingsResource_UpdateMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] language The language code (a BCP-47 language tag) of the
       * localized listing to read or modify. For example, to select Austrian
       * German, pass "de-AT".
       * @param[in] _content_ The data object to update.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_ListingsResource_UpdateMethod* NewUpdateMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& language,
          const Listing& _content_) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(ListingsResource);
    };
    /**
     * Gets the listings resource method factory.
     *
     * @return ListingsResource for creating methods.
     */
    const ListingsResource& get_listings() const {
      return listings_;
    }


    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class TestersResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit TestersResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~TestersResource() {}


      /**
       * Creates a new EditsResource_TestersResource_GetMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] track
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_TestersResource_GetMethod* NewGetMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& track) const;

      /**
       * Creates a new EditsResource_TestersResource_PatchMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] track
       * @param[in] _content_ The data object to patch.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_TestersResource_PatchMethod* NewPatchMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& track,
          const Testers& _content_) const;

      /**
       * Creates a new EditsResource_TestersResource_UpdateMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] track
       * @param[in] _content_ The data object to update.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_TestersResource_UpdateMethod* NewUpdateMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& track,
          const Testers& _content_) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(TestersResource);
    };
    /**
     * Gets the testers resource method factory.
     *
     * @return TestersResource for creating methods.
     */
    const TestersResource& get_testers() const {
      return testers_;
    }


    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class TracksResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit TracksResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~TracksResource() {}


      /**
       * Creates a new EditsResource_TracksResource_GetMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] track The track type to read or modify.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_TracksResource_GetMethod* NewGetMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& track) const;

      /**
       * Creates a new EditsResource_TracksResource_ListMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_TracksResource_ListMethod* NewListMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id) const;

      /**
       * Creates a new EditsResource_TracksResource_PatchMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] track The track type to read or modify.
       * @param[in] _content_ The data object to patch.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_TracksResource_PatchMethod* NewPatchMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& track,
          const Track& _content_) const;

      /**
       * Creates a new EditsResource_TracksResource_UpdateMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name Unique identifier for the Android app that is
       * being updated; for example, "com.spiffygame".
       * @param[in] edit_id Unique identifier for this edit.
       * @param[in] track The track type to read or modify.
       * @param[in] _content_ The data object to update.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      EditsResource_TracksResource_UpdateMethod* NewUpdateMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& edit_id,
          const StringPiece& track,
          const Track& _content_) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(TracksResource);
    };
    /**
     * Gets the tracks resource method factory.
     *
     * @return TracksResource for creating methods.
     */
    const TracksResource& get_tracks() const {
      return tracks_;
    }



    /**
     * Creates a new EditsResource_CommitMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app that is
     * being updated; for example, "com.spiffygame".
     * @param[in] edit_id Unique identifier for this edit.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    EditsResource_CommitMethod* NewCommitMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const StringPiece& edit_id) const;

    /**
     * Creates a new EditsResource_DeleteMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app that is
     * being updated; for example, "com.spiffygame".
     * @param[in] edit_id Unique identifier for this edit.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    EditsResource_DeleteMethod* NewDeleteMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const StringPiece& edit_id) const;

    /**
     * Creates a new EditsResource_GetMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app that is
     * being updated; for example, "com.spiffygame".
     * @param[in] edit_id Unique identifier for this edit.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    EditsResource_GetMethod* NewGetMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const StringPiece& edit_id) const;

    /**
     * Creates a new EditsResource_InsertMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app that is
     * being updated; for example, "com.spiffygame".
     * @param[in] _content_ The data object to insert.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    EditsResource_InsertMethod* NewInsertMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const AppEdit& _content_) const;

    /**
     * Creates a new EditsResource_ValidateMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app that is
     * being updated; for example, "com.spiffygame".
     * @param[in] edit_id Unique identifier for this edit.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    EditsResource_ValidateMethod* NewValidateMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const StringPiece& edit_id) const;

   private:
    AndroidPublisherService* service_;
    ApklistingsResource apklistings_;
    ApksResource apks_;
    DeobfuscationfilesResource deobfuscationfiles_;
    DetailsResource details_;
    ExpansionfilesResource expansionfiles_;
    ImagesResource images_;
    ListingsResource listings_;
    TestersResource testers_;
    TracksResource tracks_;

    DISALLOW_COPY_AND_ASSIGN(EditsResource);
  };

  /**
   * Acts as message factory for accessing  data.
   *
   * @ingroup ServiceClass
   */
  class EntitlementsResource {
   public:
    /**
     * Standard constructor.
     *
     * @param[in] service  The service instance is used to bind to the
     *            methods created from this resource instance.  This will be
     *            the service that methods are invoked on.
     */
    explicit EntitlementsResource(AndroidPublisherService* service);

    /**
     * Standard destructor.
     */
    ~EntitlementsResource() {}


    /**
     * Creates a new EntitlementsResource_ListMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name The package name of the application the inapp
     * product was sold in (for example, 'com.some.thing').
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    EntitlementsResource_ListMethod* NewListMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name) const;

   private:
    AndroidPublisherService* service_;

    DISALLOW_COPY_AND_ASSIGN(EntitlementsResource);
  };

  /**
   * Acts as message factory for accessing  data.
   *
   * @ingroup ServiceClass
   */
  class InappproductsResource {
   public:
    /**
     * Standard constructor.
     *
     * @param[in] service  The service instance is used to bind to the
     *            methods created from this resource instance.  This will be
     *            the service that methods are invoked on.
     */
    explicit InappproductsResource(AndroidPublisherService* service);

    /**
     * Standard destructor.
     */
    ~InappproductsResource() {}


    /**
     * Creates a new InappproductsResource_BatchMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] _content_ The data object to batch.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    InappproductsResource_BatchMethod* NewBatchMethod(
        client::AuthorizationCredential* _credential_,
        const InappproductsBatchRequest& _content_) const;

    /**
     * Creates a new InappproductsResource_DeleteMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app with the
     * in-app product; for example, "com.spiffygame".
     * @param[in] sku Unique identifier for the in-app product.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    InappproductsResource_DeleteMethod* NewDeleteMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const StringPiece& sku) const;

    /**
     * Creates a new InappproductsResource_GetMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name
     * @param[in] sku Unique identifier for the in-app product.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    InappproductsResource_GetMethod* NewGetMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const StringPiece& sku) const;

    /**
     * Creates a new InappproductsResource_InsertMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app; for
     * example, "com.spiffygame".
     * @param[in] _content_ The data object to insert.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    InappproductsResource_InsertMethod* NewInsertMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const InAppProduct& _content_) const;

    /**
     * Creates a new InappproductsResource_ListMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app with in-app
     * products; for example, "com.spiffygame".
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    InappproductsResource_ListMethod* NewListMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name) const;

    /**
     * Creates a new InappproductsResource_PatchMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app with the
     * in-app product; for example, "com.spiffygame".
     * @param[in] sku Unique identifier for the in-app product.
     * @param[in] _content_ The data object to patch.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    InappproductsResource_PatchMethod* NewPatchMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const StringPiece& sku,
        const InAppProduct& _content_) const;

    /**
     * Creates a new InappproductsResource_UpdateMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app with the
     * in-app product; for example, "com.spiffygame".
     * @param[in] sku Unique identifier for the in-app product.
     * @param[in] _content_ The data object to update.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    InappproductsResource_UpdateMethod* NewUpdateMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const StringPiece& sku,
        const InAppProduct& _content_) const;

   private:
    AndroidPublisherService* service_;

    DISALLOW_COPY_AND_ASSIGN(InappproductsResource);
  };

  /**
   * Acts as message factory for accessing  data.
   *
   * @ingroup ServiceClass
   */
  class PurchasesResource {
   public:
    /**
     * Standard constructor.
     *
     * @param[in] service  The service instance is used to bind to the
     *            methods created from this resource instance.  This will be
     *            the service that methods are invoked on.
     */
    explicit PurchasesResource(AndroidPublisherService* service);

    /**
     * Standard destructor.
     */
    ~PurchasesResource() {}

    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class ProductsResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit ProductsResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~ProductsResource() {}


      /**
       * Creates a new PurchasesResource_ProductsResource_GetMethod instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name The package name of the application the inapp
       * product was sold in (for example, 'com.some.thing').
       * @param[in] product_id The inapp product SKU (for example,
       * 'com.some.thing.inapp1').
       * @param[in] token The token provided to the user's device when the inapp
       * product was purchased.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      PurchasesResource_ProductsResource_GetMethod* NewGetMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& product_id,
          const StringPiece& token) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(ProductsResource);
    };
    /**
     * Gets the products resource method factory.
     *
     * @return ProductsResource for creating methods.
     */
    const ProductsResource& get_products() const {
      return products_;
    }


    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class SubscriptionsResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit SubscriptionsResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~SubscriptionsResource() {}


      /**
       * Creates a new PurchasesResource_SubscriptionsResource_CancelMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name The package name of the application for which
       * this subscription was purchased (for example, 'com.some.thing').
       * @param[in] subscription_id The purchased subscription ID (for example,
       * 'monthly001').
       * @param[in] token The token provided to the user's device when the
       * subscription was purchased.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      PurchasesResource_SubscriptionsResource_CancelMethod* NewCancelMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& subscription_id,
          const StringPiece& token) const;

      /**
       * Creates a new PurchasesResource_SubscriptionsResource_DeferMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name The package name of the application for which
       * this subscription was purchased (for example, 'com.some.thing').
       * @param[in] subscription_id The purchased subscription ID (for example,
       * 'monthly001').
       * @param[in] token The token provided to the user's device when the
       * subscription was purchased.
       * @param[in] _content_ The data object to defer.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      PurchasesResource_SubscriptionsResource_DeferMethod* NewDeferMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& subscription_id,
          const StringPiece& token,
          const SubscriptionPurchasesDeferRequest& _content_) const;

      /**
       * Creates a new PurchasesResource_SubscriptionsResource_GetMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name The package name of the application for which
       * this subscription was purchased (for example, 'com.some.thing').
       * @param[in] subscription_id The purchased subscription ID (for example,
       * 'monthly001').
       * @param[in] token The token provided to the user's device when the
       * subscription was purchased.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      PurchasesResource_SubscriptionsResource_GetMethod* NewGetMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& subscription_id,
          const StringPiece& token) const;

      /**
       * Creates a new PurchasesResource_SubscriptionsResource_RefundMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name The package name of the application for which
       * this subscription was purchased (for example, 'com.some.thing').
       * @param[in] subscription_id The purchased subscription ID (for example,
       * 'monthly001').
       * @param[in] token The token provided to the user's device when the
       * subscription was purchased.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      PurchasesResource_SubscriptionsResource_RefundMethod* NewRefundMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& subscription_id,
          const StringPiece& token) const;

      /**
       * Creates a new PurchasesResource_SubscriptionsResource_RevokeMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name The package name of the application for which
       * this subscription was purchased (for example, 'com.some.thing').
       * @param[in] subscription_id The purchased subscription ID (for example,
       * 'monthly001').
       * @param[in] token The token provided to the user's device when the
       * subscription was purchased.
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      PurchasesResource_SubscriptionsResource_RevokeMethod* NewRevokeMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name,
          const StringPiece& subscription_id,
          const StringPiece& token) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(SubscriptionsResource);
    };
    /**
     * Gets the subscriptions resource method factory.
     *
     * @return SubscriptionsResource for creating methods.
     */
    const SubscriptionsResource& get_subscriptions() const {
      return subscriptions_;
    }


    /**
     * Acts as message factory for accessing  data.
     *
     * @ingroup ServiceClass
     */
    class VoidedpurchasesResource {
     public:
      /**
       * Standard constructor.
       *
       * @param[in] service  The service instance is used to bind to the
       *            methods created from this resource instance.  This will be
       *            the service that methods are invoked on.
       */
      explicit VoidedpurchasesResource(AndroidPublisherService* service);

      /**
       * Standard destructor.
       */
      ~VoidedpurchasesResource() {}


      /**
       * Creates a new PurchasesResource_VoidedpurchasesResource_ListMethod
       * instance.
       *
       * @param[in] _credential_  Can be NULL.
       *            NULL credentials will not authorize the request.
       * @param[in] package_name The package name of the application for which
       * voided purchases need to be returned (for example, 'com.some.thing').
       * @returns  The caller should <code>Execute</code> the method instance,
       *           then destroy it when they are finished.
       */
      PurchasesResource_VoidedpurchasesResource_ListMethod* NewListMethod(
          client::AuthorizationCredential* _credential_,
          const StringPiece& package_name) const;

     private:
      AndroidPublisherService* service_;

      DISALLOW_COPY_AND_ASSIGN(VoidedpurchasesResource);
    };
    /**
     * Gets the voidedpurchases resource method factory.
     *
     * @return VoidedpurchasesResource for creating methods.
     */
    const VoidedpurchasesResource& get_voidedpurchases() const {
      return voidedpurchases_;
    }



   private:
    AndroidPublisherService* service_;
    ProductsResource products_;
    SubscriptionsResource subscriptions_;
    VoidedpurchasesResource voidedpurchases_;

    DISALLOW_COPY_AND_ASSIGN(PurchasesResource);
  };

  /**
   * Acts as message factory for accessing  data.
   *
   * @ingroup ServiceClass
   */
  class ReviewsResource {
   public:
    /**
     * Standard constructor.
     *
     * @param[in] service  The service instance is used to bind to the
     *            methods created from this resource instance.  This will be
     *            the service that methods are invoked on.
     */
    explicit ReviewsResource(AndroidPublisherService* service);

    /**
     * Standard destructor.
     */
    ~ReviewsResource() {}


    /**
     * Creates a new ReviewsResource_GetMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app for which
     * we want reviews; for example, "com.spiffygame".
     * @param[in] review_id
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    ReviewsResource_GetMethod* NewGetMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const StringPiece& review_id) const;

    /**
     * Creates a new ReviewsResource_ListMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app for which
     * we want reviews; for example, "com.spiffygame".
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    ReviewsResource_ListMethod* NewListMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name) const;

    /**
     * Creates a new ReviewsResource_ReplyMethod instance.
     *
     * @param[in] _credential_  Can be NULL.
     *            NULL credentials will not authorize the request.
     * @param[in] package_name Unique identifier for the Android app for which
     * we want reviews; for example, "com.spiffygame".
     * @param[in] review_id
     * @param[in] _content_ The data object to reply.
     * @returns  The caller should <code>Execute</code> the method instance,
     *           then destroy it when they are finished.
     */
    ReviewsResource_ReplyMethod* NewReplyMethod(
        client::AuthorizationCredential* _credential_,
        const StringPiece& package_name,
        const StringPiece& review_id,
        const ReviewsReplyRequest& _content_) const;

   private:
    AndroidPublisherService* service_;

    DISALLOW_COPY_AND_ASSIGN(ReviewsResource);
  };



  /**
   * Standard constructor.
   *
   * @param[in] transport  The transport to use when creating methods to invoke
   *                       on this service instance.
   */
  explicit AndroidPublisherService(client::HttpTransport* transport);

  /**
   * Standard destructor.
   */
  virtual ~AndroidPublisherService();

  /**
   * Gets the  resource method factory.
   *
   * @return EditsResource for creating methods.
   */
  const EditsResource& get_edits() const {
    return edits_;
  }


  /**
   * Gets the  resource method factory.
   *
   * @return EntitlementsResource for creating methods.
   */
  const EntitlementsResource& get_entitlements() const {
    return entitlements_;
  }


  /**
   * Gets the  resource method factory.
   *
   * @return InappproductsResource for creating methods.
   */
  const InappproductsResource& get_inappproducts() const {
    return inappproducts_;
  }


  /**
   * Gets the  resource method factory.
   *
   * @return PurchasesResource for creating methods.
   */
  const PurchasesResource& get_purchases() const {
    return purchases_;
  }


  /**
   * Gets the  resource method factory.
   *
   * @return ReviewsResource for creating methods.
   */
  const ReviewsResource& get_reviews() const {
    return reviews_;
  }

  /**
   * Declares the OAuth2.0 scopes used within Google Play Developer API
   *
   * These scopes shoudl be used when asking for credentials to invoke methods
   * in the AndroidPublisherService.
   */
  class SCOPES {
   public:
    /**
     * View and manage your Google Play Developer account.
     */
    static const char ANDROIDPUBLISHER[];

   private:
    SCOPES();  // Never instantiated.
    ~SCOPES();  // Never instantiated.
  };

 private:
  EditsResource edits_;
  EntitlementsResource entitlements_;
  InappproductsResource inappproducts_;
  PurchasesResource purchases_;
  ReviewsResource reviews_;

  DISALLOW_COPY_AND_ASSIGN(AndroidPublisherService);
};


/**
 * @defgroup DataObject Google Play Developer API Data Objects
 *
 * The data objects are used as parameters and responses from service requests.
 * For more information about using data objects, see the
 * <a href='https://developers.google.com/api-client-library/cpp/'>
 * Google APIs Client Library for C++ Developers's Guide</a>.
 */

/**
 * @defgroup ServiceClass Google Play Developer API Service
 *
 * The service classes contain information about accessing and using the
 * Google Play Developer API cloud service.
 *
 * For more information about using services, see the
 * <a href='https://developers.google.com/api-client-library/cpp/'>
 * Google APIs Client Library for C++ Developers's Guide</a>.
 */

/**
 * @defgroup ServiceMethod Google Play Developer API Service Methods
 *
 * The service method classes are used to create and invoke methods in the
 * AndroidPublisherService to access the Google Play Developer API.
 *
 * For more information about using services, see the
 * <a href='https://developers.google.com/api-client-library/cpp/'>
 * Google APIs Client Library for C++ Developers's Guide</a>.
 */
}  // namespace google_androidpublisher_api
#endif  // GOOGLE_ANDROIDPUBLISHER_API_ANDROID_PUBLISHER_SERVICE_H_
