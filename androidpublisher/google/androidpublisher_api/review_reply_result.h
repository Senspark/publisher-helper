// Copyright 2010 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.5.1
//   Build date: 2017-02-15 17:18:02 UTC
//   on: 2017-08-09, 13:29:24 UTC
//   C++ generator version: 0.1.4

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   Google Play Developer API (androidpublisher/v2)
// Generated from:
//   Version: v2
//   Revision: 45
// Generated by:
//    Tool: google-apis-code-generator 1.5.1
//     C++: 0.1.4
#ifndef  GOOGLE_ANDROIDPUBLISHER_API_REVIEW_REPLY_RESULT_H_
#define  GOOGLE_ANDROIDPUBLISHER_API_REVIEW_REPLY_RESULT_H_

#include <string>
#include "googleapis/base/macros.h"
#include "googleapis/client/data/jsoncpp_data.h"
#include "googleapis/strings/stringpiece.h"

#include "google/androidpublisher_api/timestamp.h"

namespace Json {
class Value;
}  // namespace Json

namespace google_androidpublisher_api {
using namespace googleapis;

/**
 * No description provided.
 *
 * @ingroup DataObject
 */
class ReviewReplyResult : public client::JsonCppData {
 public:
  /**
   * Creates a new default instance.
   *
   * @return Ownership is passed back to the caller.
   */
  static ReviewReplyResult* New();

  /**
   * Standard constructor for an immutable data object instance.
   *
   * @param[in] storage  The underlying data storage for this instance.
   */
  explicit ReviewReplyResult(const Json::Value& storage);

  /**
   * Standard constructor for a mutable data object instance.
   *
   * @param[in] storage  The underlying data storage for this instance.
   */
  explicit ReviewReplyResult(Json::Value* storage);

  /**
   * Standard destructor.
   */
  virtual ~ReviewReplyResult();

  /**
   * Returns a string denoting the type of this data object.
   *
   * @return <code>google_androidpublisher_api::ReviewReplyResult</code>
   */
  const StringPiece GetTypeName() const {
    return StringPiece("google_androidpublisher_api::ReviewReplyResult");
  }

  /**
   * Determine if the '<code>lastEdited</code>' attribute was set.
   *
   * @return true if the '<code>lastEdited</code>' attribute was set.
   */
  bool has_last_edited() const {
    return Storage().isMember("lastEdited");
  }

  /**
   * Clears the '<code>lastEdited</code>' attribute.
   */
  void clear_last_edited() {
    MutableStorage()->removeMember("lastEdited");
  }


  /**
   * Get a reference to the value of the '<code>lastEdited</code>' attribute.
   */
  const Timestamp get_last_edited() const;

  /**
   * Gets a reference to a mutable value of the '<code>lastEdited</code>'
   * property.
   *
   * The time at which the reply took effect.
   *
   * @return The result can be modified to change the attribute value.
   */
  Timestamp mutable_lastEdited();

  /**
   * Determine if the '<code>replyText</code>' attribute was set.
   *
   * @return true if the '<code>replyText</code>' attribute was set.
   */
  bool has_reply_text() const {
    return Storage().isMember("replyText");
  }

  /**
   * Clears the '<code>replyText</code>' attribute.
   */
  void clear_reply_text() {
    MutableStorage()->removeMember("replyText");
  }


  /**
   * Get the value of the '<code>replyText</code>' attribute.
   */
  const StringPiece get_reply_text() const {
    const Json::Value& v = Storage("replyText");
    if (v == Json::Value::null) return StringPiece("");
    return StringPiece(v.asCString());
  }

  /**
   * Change the '<code>replyText</code>' attribute.
   *
   * The reply text that was applied.
   *
   * @param[in] value The new value.
   */
  void set_reply_text(const StringPiece& value) {
    *MutableStorage("replyText") = value.data();
  }

 private:
  void operator=(const ReviewReplyResult&);
};  // ReviewReplyResult
}  // namespace google_androidpublisher_api
#endif  // GOOGLE_ANDROIDPUBLISHER_API_REVIEW_REPLY_RESULT_H_
